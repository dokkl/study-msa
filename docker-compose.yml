version: '2.1'

services:
  product:
    build: microservices/product-service
    mem_limit: 500m
    networks:
      - my-network
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
#      mongodb:
#        condition: service_healthy
      rabbitmq:
        condition: service_healthy

  recommendation:
    build: microservices/recommendation-service
    mem_limit: 500m
    networks:
      - my-network
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
#      mongodb:
#        condition: service_healthy
      rabbitmq:
        condition: service_healthy

  review:
    build: microservices/review-service
    mem_limit: 500m
    networks:
      - my-network
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      mysql:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

  product-composite:
    build: microservices/product-composite-service
    mem_limit: 500m
    networks:
      - my-network
#    에지서버 적용으로 포트 제거
#    ports:
#      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      rabbitmq:
        condition: service_healthy

  eureka:
    build: spring-cloud/eureka-server
    mem_limit: 500m
    networks:
      - my-network
#    에지서버 적용으로 포트 제거
#    ports:
#      - "8761:8761"

  gateway:
    environment:
      - SPRING_PROFILES_ACTIVE=docker
#      - SERVER_SSL_KEY_STORE=file:keystore/edge-test.p12
#      - SERVER_SSL_KEY_STORE_PASWORD=testtest
#    volumes:
#      - $PWD/keystore:/Users/hoon/dev/study/keystore
    build: spring-cloud/gateway
    mem_limit: 500m
    networks:
      - my-network
    ports:
      - "8443:8443"

  auth-server:
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    build: spring-cloud/authorization-server
    mem_limit: 500m
    networks:
      - my-network

  # $ mongo
  mongodb:
    platform: linux/x86_64    # 추가된 라인 for mac M1
    image: mongo:3.4
    mem_limit: 500m
    networks:
      - my-network
    ports:
      - "27017:27017"
    command: mongod --smallfiles
    healthcheck:
      test: "mongo --eval 'db.stats().ok'"
      interval: 20s
      timeout: 5s
      retries: 10

  # $ mysql -uroot -h127.0.0.1 -p
  mysql:
    platform: linux/x86_64    # 추가된 라인 for mac M1
    image: mysql:5.7
    mem_limit: 500m
    networks:
      - my-network
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=rootpwd
      - MYSQL_DATABASE=review-db
      - MYSQL_USER=user
      - MYSQL_PASSWORD=pwd
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-uuser", "-ppwd", "-h", "localhost"]
      interval: 20s
      timeout: 5s
      retries: 10

  rabbitmq:
    image: rabbitmq:3.7.8-management
    mem_limit: 500m
    networks:
      - my-network
    ports:
      - 5672:5672
      - 15672:15672
    healthcheck:
      test: [ "CMD", "rabbitmqctl", "status" ]
      interval: 20s
      timeout: 5s
      retries: 10

networks:
  my-network:
    name: my-network

