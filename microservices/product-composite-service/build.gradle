plugins {
	id 'org.springframework.boot' version '2.6.2'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
}

jar {
	enabled = false		// false 이면 -plain.jar 를 생성하지 않게한다.
}

group = 'com.hoon.msa.composite.product'
version = '1.0.0-SNAPSHOT'
sourceCompatibility = '11'

ext {
	springCloudVersion = "2021.0.0"
	resilience4jVersion = "1.7.0"
}

repositories {
	mavenCentral()
}

dependencies {
	implementation project(':api')
	implementation project(':util')
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'junit:junit:4.13.1'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'

	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'
	compileOnly 'org.projectlombok:lombok'
	testCompileOnly "org.projectlombok:lombok"
	testAnnotationProcessor 'org.projectlombok:lombok'

	implementation 'io.springfox:springfox-boot-starter:3.0.0'

	implementation('org.springframework.cloud:spring-cloud-starter-stream-rabbit')
	implementation('org.springframework.cloud:spring-cloud-starter-stream-kafka')
	testImplementation('org.springframework.cloud:spring-cloud-stream-test-support')

	implementation('org.springframework.cloud:spring-cloud-starter-netflix-eureka-client')
	implementation('org.springframework.boot:spring-boot-starter-security')
	implementation('org.springframework.security:spring-security-oauth2-resource-server')
	implementation('org.springframework.security:spring-security-oauth2-jose')

	implementation("io.github.resilience4j:resilience4j-spring-boot2:${resilience4jVersion}")
	implementation("io.github.resilience4j:resilience4j-reactor:${resilience4jVersion}")


}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

test {
	useJUnitPlatform()
}
